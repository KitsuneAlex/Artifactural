plugins {
  id 'java-library'
  id 'maven-publish'
  id 'eclipse'
  id 'org.cadixdev.licenser' version '0.6.0'
  id 'org.ajoberstar.grgit' version '4.1.0'
}

group = 'net.minecraftforge'

version = (grgit.describe(longDescr: true, tags: true) ?: 'unknown-unknown-unknown').split('-').with { "${it[0]}.${it[1]}" }
println('Version: ' + version + ' Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

sourceSets {
    api
    shared
    gradlecomp
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url = 'https://maven.minecraftforge.net'
    }
}

configurations {
    sharedImplementation.extendsFrom apiImplementation
    gradlecompImplementation.extendsFrom sharedImplementation

    implementation.extendsFrom sharedImplementation
    implementation.extendsFrom gradlecompImplementation
}

dependencies {
    sharedImplementation sourceSets.api.output

    gradlecompImplementation sourceSets.shared.output
    gradlecompImplementation gradleApi()
    gradlecompImplementation 'com.google.guava:guava:30.1-jre'
    gradlecompImplementation 'net.minecraftforge:unsafe:0.2.0'

    implementation sourceSets.api.output
    implementation sourceSets.shared.output
    implementation sourceSets.gradlecomp.output
}


tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
    options.deprecation = true
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(8)
    withSourcesJar()
}

jar {
    from sourceSets.api.output
    from sourceSets.shared.output
    from sourceSets.gradlecomp.output
}

sourcesJar {
    from sourceSets.api.allSource
    from sourceSets.shared.allSource
    from sourceSets.gradlecomp.allSource
}

license {
    header = file("$rootDir/LICENSE-header.txt")
}

publishing {
    publications.create("mavenJava", MavenPublication) {
        from components.java
        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
            name = project.archivesBaseName
            packaging = 'jar'
            description = 'A Gradle artifact processing and management tool'
            url = 'https://github.com/MinecraftForge/Artifactural/'

            scm {
                url = 'https://github.com/MinecraftForge/Artifactural/'
                connection = 'scm:git:git://github.com/MinecraftForge/Artifactural.git'
                developerConnection = 'scm:git:git@github.com:MinecraftForge/Artifactural.git'
            }
            issueManagement {
                system = 'github'
                url = 'https://github.com/MinecraftForge/Artifactural/issues'
            }
            licenses {
                license {
                    name = 'LGPL-2.1'
                    url = 'https://www.gnu.org/licenses/lgpl-2.1.txt'
                    distribution = 'repo'
                }
            }
        }
    }
    repositories {
        maven {
            if (System.env.MAVEN_USER) {
                url 'https://maven.minecraftforge.net/'
                authentication {
                    basic(BasicAuthentication)
                }
                credentials {
                    username = System.env.MAVEN_USER ?: 'not'
                    password = System.env.MAVEN_PASSWORD ?: 'set'
                }
            } else {
                url 'file://' + rootProject.file('repo').getAbsolutePath()
            }
        }
    }
}

